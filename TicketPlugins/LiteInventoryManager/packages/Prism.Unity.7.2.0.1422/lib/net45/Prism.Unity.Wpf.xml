<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Prism.Unity.Wpf</name>
    </assembly>
    <members>
        <member name="T:Prism.Unity.UnityBootstrapper">
            <summary>
            Base class that provides a basic bootstrapping sequence that
            registers most of the Prism Library assets
            in a <see cref="T:Unity.IUnityContainer"/>.
            </summary>
            <remarks>
            This class must be overridden to provide application specific configuration.
            </remarks>
        </member>
        <member name="P:Prism.Unity.UnityBootstrapper.Container">
            <summary>
            Gets the default <see cref="T:Unity.IUnityContainer"/> for the application.
            </summary>
            <value>The default <see cref="T:Unity.IUnityContainer"/> instance.</value>
        </member>
        <member name="M:Prism.Unity.UnityBootstrapper.Run(System.Boolean)">
            <summary>
            Run the bootstrapper process.
            </summary>
            <param name="runWithDefaultConfiguration">If <see langword="true"/>, registers default Prism Library services in the container. This is the default behavior.</param>
        </member>
        <member name="M:Prism.Unity.UnityBootstrapper.ConfigureServiceLocator">
            <summary>
            Configures the LocatorProvider for the <see cref="T:CommonServiceLocator.ServiceLocator" />.
            </summary>
        </member>
        <member name="M:Prism.Unity.UnityBootstrapper.RegisterFrameworkExceptionTypes">
            <summary>
            Registers in the <see cref="T:Unity.IUnityContainer"/> the <see cref="T:System.Type"/> of the Exceptions
            that are not considered root exceptions by the <see cref="T:System.ExceptionExtensions"/>.
            </summary>
        </member>
        <member name="M:Prism.Unity.UnityBootstrapper.ConfigureContainer">
            <summary>
            Configures the <see cref="T:Unity.IUnityContainer"/>. May be overwritten in a derived class to add specific
            type mappings required by the application.
            </summary>
        </member>
        <member name="M:Prism.Unity.UnityBootstrapper.InitializeModules">
            <summary>
            Initializes the modules. May be overwritten in a derived class to use a custom Modules Catalog
            </summary>
        </member>
        <member name="M:Prism.Unity.UnityBootstrapper.CreateContainer">
            <summary>
            Creates the <see cref="T:Unity.IUnityContainer"/> that will be used as the default container.
            </summary>
            <returns>A new instance of <see cref="T:Unity.IUnityContainer"/>.</returns>
        </member>
        <member name="M:Prism.Unity.UnityBootstrapper.RegisterTypeIfMissing(System.Type,System.Type,System.Boolean)">
            <summary>
            Registers a type in the container only if that type was not already registered.
            </summary>
            <param name="fromType">The interface type to register.</param>
            <param name="toType">The type implementing the interface.</param>
            <param name="registerAsSingleton">Registers the type as a singleton.</param>
        </member>
        <member name="T:Prism.Unity.UnityContainerHelper">
            <summary>
            Extensions methods to extend and facilitate the usage of <see cref="T:Unity.IUnityContainer"/>.
            </summary>
        </member>
        <member name="M:Prism.Unity.UnityContainerHelper.IsTypeRegistered(Unity.IUnityContainer,System.Type)">
            <summary>
            Returns whether a specified type has a type mapping registered in the container.
            </summary>
            <param name="container">The <see cref="T:Unity.IUnityContainer"/> to check for the type mapping.</param>
            <param name="type">The type to check if there is a type mapping for.</param>
            <returns><see langword="true"/> if there is a type mapping registered for <paramref name="type"/>.</returns>
            <remarks>In order to use this extension method, you first need to add the
            <see cref="T:Unity.IUnityContainer"/> extension to the <see cref="!:UnityBootstrapperExtension"/>.
            </remarks>        
        </member>
        <member name="M:Prism.Unity.UnityContainerHelper.TryResolve``1(Unity.IUnityContainer)">
            <summary>
            Utility method to try to resolve a service from the container avoiding an exception if the container cannot build the type.
            </summary>
            <param name="container">The cointainer that will be used to resolve the type.</param>
            <typeparam name="T">The type to resolve.</typeparam>
            <returns>The instance of <typeparamref name="T"/> built up by the container.</returns>
        </member>
        <member name="M:Prism.Unity.UnityContainerHelper.TryResolve(Unity.IUnityContainer,System.Type)">
            <summary>
            Utility method to try to resolve a service from the container avoiding an exception if the container cannot build the type.
            </summary>
            <param name="container">The cointainer that will be used to resolve the type.</param>
            <param name="typeToResolve">The type to resolve.</param>
            <returns>The instance of <paramref name="typeToResolve"/> built up by the container.</returns>
        </member>
        <member name="M:Prism.Unity.UnityExtensions.RegisterTypeForNavigation(Unity.IUnityContainer,System.Type,System.String)">
            <summary>
            Registers an object for navigation
            </summary>
            <param name="container"></param>
            <param name="type">The type of object to register</param>
            <param name="name">The unique name to register with the obect.</param>
            <returns><see cref="T:Unity.IUnityContainer"/></returns>
        </member>
        <member name="M:Prism.Unity.UnityExtensions.RegisterTypeForNavigation``1(Unity.IUnityContainer,System.String)">
            <summary>
            Registers an object for navigation.
            </summary>
            <typeparam name="T">The Type of the object to register as the view</typeparam>
            <param name="container"></param>
            <param name="name">The unique name to register with the object.</param>
        </member>
        <member name="M:Prism.Unity.UnityExtensions.RegisterTypeForNavigation``2(Unity.IUnityContainer,System.String)">
            <summary>
            Registers an object for navigation.
            </summary>
            <typeparam name="TView">The Type of object to register as the view</typeparam>
            <typeparam name="TViewModel">The ViewModel to use as the DataContext for the view</typeparam>
            <param name="name">The unique name to register with the view</param>
            <param name="container"></param>
        </member>
        <member name="T:Prism.Unity.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.AddingUnityBootstrapperExtensionToContainer">
            <summary>
              Looks up a localized string similar to Adding UnityBootstrapperExtension to container..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.BootstrapperSequenceCompleted">
            <summary>
              Looks up a localized string similar to Bootstrapper sequence completed..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.ConfiguringDefaultRegionBehaviors">
            <summary>
              Looks up a localized string similar to Configuring default region behaviors..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.ConfiguringModuleCatalog">
            <summary>
              Looks up a localized string similar to Configuring module catalog..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.ConfiguringRegionAdapters">
            <summary>
              Looks up a localized string similar to Configuring region adapters..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.ConfiguringServiceLocatorSingleton">
            <summary>
              Looks up a localized string similar to Configuring ServiceLocator singleton..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.ConfiguringUnityContainer">
            <summary>
              Looks up a localized string similar to Configuring the Unity container..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.ConfiguringViewModelLocator">
            <summary>
              Looks up a localized string similar to Configuring the ViewModelLocator to use Unity..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.CreatingModuleCatalog">
            <summary>
              Looks up a localized string similar to Creating module catalog..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.CreatingShell">
            <summary>
              Looks up a localized string similar to Creating the shell..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.CreatingUnityContainer">
            <summary>
              Looks up a localized string similar to Creating Unity container..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.InitializingModules">
            <summary>
              Looks up a localized string similar to Initializing modules..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.InitializingShell">
            <summary>
              Looks up a localized string similar to Initializing the shell..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.LoggerCreatedSuccessfully">
            <summary>
              Looks up a localized string similar to Logger was created successfully..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.NotOverwrittenGetModuleEnumeratorException">
            <summary>
              Looks up a localized string similar to The method &apos;GetModuleEnumerator&apos; of the bootstrapper must be overwritten in order to use the default module initialization logic..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.NullLoggerFacadeException">
            <summary>
              Looks up a localized string similar to The ILoggerFacade is required and cannot be null..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.NullModuleCatalogException">
            <summary>
              Looks up a localized string similar to The IModuleCatalog is required and cannot be null in order to initialize the modules..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.NullUnityContainerException">
            <summary>
              Looks up a localized string similar to The IUnityContainer is required and cannot be null..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.RegisteringFrameworkExceptionTypes">
            <summary>
              Looks up a localized string similar to Registering Framework Exception Types..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.SettingTheRegionManager">
            <summary>
              Looks up a localized string similar to Setting the RegionManager..
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.TypeMappingAlreadyRegistered">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; was already registered by the application. Skipping....
            </summary>
        </member>
        <member name="P:Prism.Unity.Properties.Resources.UpdatingRegions">
            <summary>
              Looks up a localized string similar to Updating Regions..
            </summary>
        </member>
        <member name="T:Prism.Unity.Regions.UnityRegionNavigationContentLoader">
            <summary>
            Specialization of the default RegionNavigationContentLoader that queries the corresponding <see cref="T:Unity.IUnityContainer"/>
            to obtain the name of the view's type registered for the contract name.
            </summary>
        </member>
        <member name="M:Prism.Unity.Regions.UnityRegionNavigationContentLoader.#ctor(CommonServiceLocator.IServiceLocator,Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Prism.Unity.Regions.UnityRegionNavigationContentLoader"/> class.
            </summary>
            <param name="serviceLocator"><see cref="T:CommonServiceLocator.IServiceLocator"/> used to create the instance of the view from its <see cref="T:System.Type"/>.</param>
            <param name="container"><see cref="T:Unity.IUnityContainer"/> where the views are registered.</param>
        </member>
        <member name="M:Prism.Unity.Regions.UnityRegionNavigationContentLoader.GetCandidatesFromRegion(Prism.Regions.IRegion,System.String)">
            <summary>
            Returns the set of candidates that may satisfiy this navigation request.
            </summary>
            <param name="region">The region containing items that may satisfy the navigation request.</param>
            <param name="candidateNavigationContract">The candidate navigation target.</param>
            <returns>An enumerable of candidate objects from the <see cref="T:Prism.Regions.IRegion"/></returns>
        </member>
        <member name="T:Prism.Unity.UnityServiceLocatorAdapter">
            <summary>
            Defines a <see cref="T:Unity.IUnityContainer"/> adapter for the <see cref="T:CommonServiceLocator.IServiceLocator"/> interface to be used by the Prism Library.
            </summary>
        </member>
        <member name="M:Prism.Unity.UnityServiceLocatorAdapter.#ctor(Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of <see cref="T:Prism.Unity.UnityServiceLocatorAdapter"/>.
            </summary>
            <param name="unityContainer">The <see cref="T:Unity.IUnityContainer"/> that will be used
            by the <see cref="M:Prism.Unity.UnityServiceLocatorAdapter.DoGetInstance(System.Type,System.String)"/> and <see cref="M:Prism.Unity.UnityServiceLocatorAdapter.DoGetAllInstances(System.Type)"/> methods.</param>
        </member>
        <member name="M:Prism.Unity.UnityServiceLocatorAdapter.DoGetInstance(System.Type,System.String)">
            <summary>
            Resolves the instance of the requested service.
            </summary>
            <param name="serviceType">Type of instance requested.</param>
            <param name="key">Name of registered service you want. May be null.</param>
            <returns>The requested service instance.</returns>
        </member>
        <member name="M:Prism.Unity.UnityServiceLocatorAdapter.DoGetAllInstances(System.Type)">
            <summary>
            Resolves all the instances of the requested service.
            </summary>
            <param name="serviceType">Type of service requested.</param>
            <returns>Sequence of service instance objects.</returns>
        </member>
    </members>
</doc>
