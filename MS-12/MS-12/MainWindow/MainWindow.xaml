<Window x:Name="TMS12" x:Class="TRS.TMS12.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:interface="clr-namespace:TRS.TMS12.Interfaces;assembly=MS-12.PluginHost"
        xmlns:static="clr-namespace:TRS.TMS12.Static;assembly=MS-12.PluginHost"
        xmlns:local="clr-namespace:TRS.TMS12"
        mc:Ignorable="d"
        Title="TRS端末 MS-12"
        Height="1024" Width="1280"
        ResizeMode="NoResize" WindowStyle="None" WindowState="Maximized" WindowStartupLocation="CenterScreen"
        Background="{StaticResource BackgroundBrush}"
        TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType">
    <Window.InputBindings>
        <KeyBinding Gesture="Esc" Command="{Binding Path=FClicked[(static:FunctionKeys)Menu]}"/>

        <KeyBinding Gesture="F1" Command="{Binding Path=FClicked[(static:FunctionKeys)F1]}"/>
        <KeyBinding Gesture="F2" Command="{Binding Path=FClicked[(static:FunctionKeys)F2]}"/>
        <KeyBinding Gesture="F3" Command="{Binding Path=FClicked[(static:FunctionKeys)F3]}"/>
        <KeyBinding Gesture="F4" Command="{Binding Path=FClicked[(static:FunctionKeys)F4]}"/>
        <KeyBinding Gesture="F5" Command="{Binding Path=FClicked[(static:FunctionKeys)F5]}"/>
        <KeyBinding Gesture="F6" Command="{Binding Path=FClicked[(static:FunctionKeys)F6]}"/>
        <KeyBinding Gesture="F7" Command="{Binding Path=FClicked[(static:FunctionKeys)F7]}"/>
        <KeyBinding Gesture="F8" Command="{Binding Path=FClicked[(static:FunctionKeys)F8]}"/>
        <KeyBinding Gesture="F9" Command="{Binding Path=FClicked[(static:FunctionKeys)F9]}"/>
        <KeyBinding Gesture="F10" Command="{Binding Path=FClicked[(static:FunctionKeys)F10]}"/>
        <KeyBinding Gesture="F11" Command="{Binding Path=FClicked[(static:FunctionKeys)F11]}"/>
        <KeyBinding Gesture="F12" Command="{Binding Path=FClicked[(static:FunctionKeys)F12]}"/>
        <KeyBinding Gesture="F13" Command="{Binding Path=FClicked[(static:FunctionKeys)F13]}"/>
        <KeyBinding Gesture="F14" Command="{Binding Path=FClicked[(static:FunctionKeys)F14]}"/>
        <KeyBinding Gesture="F15" Command="{Binding Path=FClicked[(static:FunctionKeys)F15]}"/>

        <KeyBinding Gesture="F16" Command="{Binding Path=FClicked[(static:FunctionKeys)Sell]}"/>
        <KeyBinding Gesture="F17" Command="{Binding Path=FClicked[(static:FunctionKeys)Reserve]}"/>
        <KeyBinding Gesture="F18" Command="{Binding Path=FClicked[(static:FunctionKeys)Inquire]}"/>

        <KeyBinding Gesture="F19" Command="{Binding Path=FClicked[(static:FunctionKeys)Hold]}"/>
        <KeyBinding Gesture="Esc" Command="{Binding Path=FClicked[(static:FunctionKeys)Release]}"/>
        <KeyBinding Gesture="Enter" Command="{Binding Path=FClicked[(static:FunctionKeys)Send]}"/>
    </Window.InputBindings>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <prism:InvokeCommandAction Command="{Binding Loaded}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="ContentRendered">
            <prism:InvokeCommandAction Command="{Binding ContentRendered}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MainGridIsEnabled}" Value="True"/>
                                <Condition Binding="{Binding MainGridIsEnabled2}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.Resources>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Visibility, ElementName=Dialog}" Value="Visible">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="LogBoxStyle" TargetType="Label">
                    <Setter Property="FontSize" Value="18"/>
                    <Setter Property="Template" Value="{StaticResource LogBox}"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="24"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="86"/>
                <RowDefinition/>
                <RowDefinition Height="38"/>
            </Grid.RowDefinitions>
            
            <Grid Grid.Row="0">
                <Rectangle Fill="{StaticResource Blue}"/>
                <TextBlock Text="ＴＲＳ端末" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-5" Foreground="White" FontSize="16" FontWeight="Bold"/>
            </Grid>
            
            <Grid Grid.Row="1">
                <Rectangle Fill="White"/>
                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="0,-5"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Label Padding="10,2" Content="{TemplateBinding Content}" FontFamily="MS Gothic" FontSize="16" FontWeight="Bold"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </StackPanel.Resources>
                    <!--<Button Content="自動登録設定(O)"/>-->
                    <Button Content="端末種別(T)" Command="{Binding ShowVersionDialog}"/>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="2">
                <Grid Height="50" VerticalAlignment="Top" Margin="3,2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="77"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition Width="77"/>
                        <ColumnDefinition Width="77"/>
                        <ColumnDefinition Width="77"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                        <Style x:Key="Red" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Foreground" Value="#600000"/>
                        </Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                        <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                            <Setter Property="FontSize" Value="22"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Foreground" Value="MediumBlue"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Template" Value="{StaticResource VeryThicklyBorderedDefToggleButton}"/>
                        </Style>
                    </Grid.Resources>
                    <Button Grid.Column="0" Content="ﾒﾆｭｰ" FontSize="22" IsEnabled="{Binding Path=FIsEnabled[(static:FunctionKeys)Menu], Mode=TwoWay}" Command="{Binding Path=FClicked[(static:FunctionKeys)Menu]}" Template="{StaticResource VeryThicklyBorderedDefButton}"/>
                    <UniformGrid Grid.Column="2" Rows="1">
                        <ToggleButton Content="営試" IsChecked="{Binding Path=FIsChecked[(static:FunctionKeys)F1], Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)F1]}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked">
                                    <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)F1]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ToggleButton>
                        <Button Content="回復" Command="{Binding Path=FClicked[(static:FunctionKeys)F2]}"/>
                        <Button Content="切替" Command="{Binding Path=FClicked[(static:FunctionKeys)F3]}"/>
                        <Button Content="保存" Command="{Binding Path=FClicked[(static:FunctionKeys)F4]}"/>
                        <Button Content="開始" Command="{Binding Path=FClicked[(static:FunctionKeys)F5]}" Style="{StaticResource Red}"/>
                        <Button Content="終了" Command="{Binding Path=FClicked[(static:FunctionKeys)F6]}" Style="{StaticResource Red}"/>
                        <Button Content="中断" Command="{Binding Path=FClicked[(static:FunctionKeys)F7]}" Style="{StaticResource Red}"/>
                        <Button Content="再開１" Command="{Binding Path=FClicked[(static:FunctionKeys)F8]}" Style="{StaticResource Red}"/>
                        <Button Content="再開２" Command="{Binding Path=FClicked[(static:FunctionKeys)F9]}" Style="{StaticResource Red}"/>
                        <Button Content="一括開始" FontSize="12" Command="{Binding Path=FClicked[(static:FunctionKeys)F10]}" Style="{StaticResource Red}"/>
                        <Button Content="一括発券" FontSize="12" Command="{Binding Path=FClicked[(static:FunctionKeys)F11]}" Style="{StaticResource Red}"/>
                        <Button Content="応答" Command="{Binding Path=FClicked[(static:FunctionKeys)F12]}"/>
                        <Button Content="残消去" Command="{Binding Path=FClicked[(static:FunctionKeys)F13]}"/>
                        <ToggleButton Content="ｸﾚｼﾞｯﾄ" IsChecked="{Binding Path=FIsChecked[(static:FunctionKeys)F14], Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)F14]}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked">
                                    <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)F14]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ToggleButton>
                        <Button Content="連加算" Command="{Binding Path=FClicked[(static:FunctionKeys)F15]}"/>
                    </UniformGrid>
                    <RadioButton Grid.Column="4" Content="発売" GroupName="SellType" IsChecked="{Binding Path=SendTypeButtonsIsChecked[(interface:SendTypes)Sell], Mode=TwoWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)Sell]}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)Sell]}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton Grid.Column="5" Content="予約" GroupName="SellType" IsChecked="{Binding Path=SendTypeButtonsIsChecked[(interface:SendTypes)Reserve], Mode=TwoWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)Reserve]}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)Reserve]}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton Grid.Column="6" Content="照会" GroupName="SellType" IsChecked="{Binding Path=SendTypeButtonsIsChecked[(interface:SendTypes)Inquire], Mode=TwoWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)Inquire]}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)Inquire]}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <Border Grid.Column="7">
                        <ToggleButton Content="中継" IsChecked="{Binding Path=FIsChecked[(static:FunctionKeys)Relay], Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)Relay]}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked">
                                    <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)Relay]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ToggleButton>
                    </Border>
                </Grid>
                <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10,4" Height="26" Orientation="Horizontal">
                    <Label HorizontalContentAlignment="Center" Width="119" Margin="0,0,30,0" Content="{Binding LogBox1}" Style="{StaticResource LogBoxStyle}"/>
                    <Label HorizontalContentAlignment="Center" Width="137" Margin="0,0,25,0" Content="{Binding LogBox2}" Style="{StaticResource LogBoxStyle}"/>
                    <Label HorizontalContentAlignment="Center" Width="155" Margin="0,0,25,0" Content="{Binding LogBox3}" Style="{StaticResource LogBoxStyle}"/>
                    <Label HorizontalContentAlignment="Center" Width="155" Content="{Binding LogBox4}" Style="{StaticResource LogBoxStyle}"/>
                </StackPanel>
                <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10,4" Height="26" Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Width" Value="130"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Template" Value="{StaticResource ThicklyBorderedDefButton}"/>
                        </Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Width" Value="130"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Template" Value="{StaticResource ThicklyBorderedDefToggleButton}"/>
                        </Style>
                    </StackPanel.Resources>
                    <ToggleButton Content="保持" IsChecked="{Binding Path=FIsChecked[(static:FunctionKeys)Hold], Mode=TwoWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)Hold]}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked">
                                <prism:InvokeCommandAction Command="{Binding Path=FClicked[(static:FunctionKeys)Hold]}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ToggleButton>
                    <Button Content="解放" Command="{Binding Path=FClicked[(static:FunctionKeys)Release]}"/>
                    <Button Content="発信" Command="{Binding Path=FClicked[(static:FunctionKeys)Send]}"/>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="3">
                <local:MainMenu x:Name="MainMenu"/>
                <local:GroupMenu x:Name="GroupMenu"/>
                <local:OneTouchMenu x:Name="OneTouchMenu"/>

                <Grid x:Name="Tickets">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=M.CurrentScreen}" Value="Tickets">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="TicketInputControlsGrid" Grid.Column="0" Visibility="{Binding InputControlVisibility}" IsEnabled="{Binding InputControlIsEnabled}">

                    </Grid>
                    <Grid x:Name="TicketKeyControlsGrid" Grid.Column="1" Visibility="{Binding KeyControlVisibility}" IsEnabled="{Binding KeyControlIsEnabled}">

                    </Grid>
                    <local:ResultControl x:Name="ResultControl" Grid.Column="1"/>
                    <local:FullScreenResultControl x:Name="FullScreenResultControl" Grid.ColumnSpan="2"/>
                </Grid>
            </Grid>
            <!--
            <local:IFNumberedTicket x:Name="UC_IFNumberedTicket" Grid.Row="3" Grid.Column="0" Visibility="Hidden" IsEnabled="False"/>
            <local:KFNumberedTicket x:Name="UC_KFNumberedTicket" Grid.Row="3" Grid.Column="1" Visibility="Hidden" IsEnabled="False"/>
            <local:IFNumberedTicketManualIssue x:Name="UC_IFNumberedTicketManualIssue" Grid.Row="3" Grid.Column="0" Visibility="Hidden" IsEnabled="False"/>
            <local:KFNumberedTicketManualIssue x:Name="UC_KFNumberedTicketManualIssue" Grid.Row="3" Grid.Column="1" Visibility="Hidden" IsEnabled="False"/>
            <local:IFCancelNumberedTicket x:Name="UC_IFCancelNumberedTicket" Grid.Row="3" Grid.Column="0" Visibility="Hidden" IsEnabled="False"/>
            <local:KFCancelNumberedTicket x:Name="UC_KFCancelNumberedTicket" Grid.Row="3" Grid.Column="1" Visibility="Hidden" IsEnabled="False"/>
            <local:IFPlatformTicket x:Name="UC_IFPlatformTicket" Grid.Row="3" Grid.Column="0" Visibility="Hidden" IsEnabled="False"/>
            <local:KFPlatformTicket x:Name="UC_KFPlatformTicket" Grid.Row="3" Grid.Column="1" Visibility="Hidden" IsEnabled="False"/>
            <local:IFPlatformTicketWithSerialNumber x:Name="UC_IFPlatformTicketWithSerialNumber" Grid.Row="3" Grid.Column="0" Visibility="Hidden" IsEnabled="False"/>
            <local:KFPlatformTicketWithSerialNumber x:Name="UC_KFPlatformTicketWithSerialNumber" Grid.Row="3" Grid.Column="1" Visibility="Hidden" IsEnabled="False"/>
            <local:IFTransferTicket x:Name="UC_IFTransferTicket" Grid.Row="3" Grid.Column="0" Visibility="Hidden" IsEnabled="False"/>
            <local:KFTransferTicket x:Name="UC_KFTransferTicket" Grid.Row="3" Grid.Column="1" Visibility="Hidden" IsEnabled="False"/>
            <local:IFEventTicket x:Name="UC_IFEventTicket" Grid.Row="3" Grid.Column="0" Visibility="Hidden" IsEnabled="False"/>
            <local:KFEventTicket x:Name="UC_KFEventTicket" Grid.Row="3" Grid.Column="1" Visibility="Hidden" IsEnabled="False"/>
            <local:IFClubMagazine x:Name="UC_IFClubMagazine" Grid.Row="3" Grid.Column="0" Visibility="Hidden" IsEnabled="False"/>
            <local:KFClubMagazine x:Name="UC_KFClubMagazine" Grid.Row="3" Grid.Column="1" Visibility="Hidden" IsEnabled="False"/>
            <local:IFReceipt x:Name="UC_IFReceipt" Grid.Row="3" Grid.Column="0" Visibility="Hidden" IsEnabled="False"/>
            <local:KFReceipt x:Name="UC_KFReceipt" Grid.Row="3" Grid.Column="1" Visibility="Hidden" IsEnabled="False"/>
            <local:ResultField x:Name="UC_ResultField" Grid.Row="3" Grid.Column="1" Visibility="Hidden"/>
            <local:MainMenu x:Name="UC_MainMenu" Grid.Row="3" Grid.ColumnSpan="2" Visibility="Hidden"/>
            <local:TicketTypeMenu x:Name="UC_TicketTypeMenu" Grid.Row="3" Grid.ColumnSpan="2" Visibility="Hidden"/>
            <local:OneTouch x:Name="UC_OneTouch" Grid.Row="3" Grid.ColumnSpan="2" Visibility="Hidden"/>
            <local:PowerOff x:Name="UC_PowerOff" Grid.Row="3" Grid.ColumnSpan="2"/>-->


            <Grid Grid.Row="4">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                    <StackPanel HorizontalAlignment="Left" Margin="5,4,0,3" Orientation="Horizontal">
                        <StackPanel.Resources>
                            <ControlTemplate x:Key="Step" TargetType="Label">
                                <Grid>
                                    <Rectangle Fill="{TemplateBinding Background}"/>
                                    <Label VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-5" Content="→" FontSize="14" Foreground="Black"/>
                                </Grid>
                            </ControlTemplate>
                        </StackPanel.Resources>
                        <Label Margin="0,0,2,0" Width="24" Background="{Binding StepColors[0]}" Template="{StaticResource Step}"/>
                        <Label Margin="0,0,2,0" Width="24" Background="{Binding StepColors[1]}" Template="{StaticResource Step}"/>
                        <Label Margin="0,0,2,0" Width="24" Background="{Binding StepColors[2]}" Template="{StaticResource Step}"/>
                        <Label Margin="0,0,2,0" Width="24" Background="{Binding StepColors[3]}" Template="{StaticResource Step}"/>
                    </StackPanel>
                    <Label Margin="40,5,0,4" Width="400" Content="{Binding LogBox5}" Style="{StaticResource LogBoxStyle}"/>
                </StackPanel>
            </Grid>
            
            <Line Grid.Row="2" VerticalAlignment="Bottom" Margin="-2" X1="0" X2="100" Stretch="Fill" StrokeThickness="2" Stroke="Black" SnapsToDevicePixels="True"/>
            <Separator Grid.Row="4" VerticalAlignment="Top" Margin="-1"/>
        </Grid>
        <local:Dialog x:Name="Dialog"/>
    </Grid>
</Window>
