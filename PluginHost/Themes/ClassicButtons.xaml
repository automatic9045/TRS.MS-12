<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TRS.TMS12.Resources"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">

    <!--
    <SolidColorBrush x:Key="ButtonFocuedBorder" Color="#646464"/>
    <SolidColorBrush x:Key="ButtonShadow" Color="#7D796F"/>
    <SolidColorBrush x:Key="ButtonBorderLight" Color="#E9E7E3"/>
    <SolidColorBrush x:Key="ButtonBorderShadow" Color="#978E7A"/>-->

    <SolidColorBrush x:Key="ButtonFocuedBorder" Color="#646464"/>
    <SolidColorBrush x:Key="ButtonShadow" Color="#717171"/>
    <SolidColorBrush x:Key="ButtonBorderLight" Color="#DFDFDF"/>
    <SolidColorBrush x:Key="ButtonBorderShadow" Color="#7F7F7F"/>
    
    <ControlTemplate x:Key="DefButton" TargetType="Button">
        <Border BorderThickness="1" BorderBrush="Black">
            <Themes:ClassicBorderDecorator x:Name="ContentContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Themes:ClassicBorderDecorator>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DefToggleButton" TargetType="ToggleButton">
        <Border BorderThickness="1" BorderBrush="Black">
            <Themes:ClassicBorderDecorator x:Name="ContentContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Themes:ClassicBorderDecorator>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ThicklyBorderedDefButton" TargetType="Button">
        <ControlTemplate.Resources>
            <Style TargetType="Border">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style TargetType="Polyline">
                <Setter Property="Stretch" Value="Fill"/>
                <Setter Property="StrokeStartLineCap" Value="Square"/>
                <Setter Property="StrokeEndLineCap" Value="Square"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style TargetType="Polygon">
                <Setter Property="Stretch" Value="Fill"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
        </ControlTemplate.Resources>
        <Border BorderBrush="Black" BorderThickness="1" Background="{TemplateBinding Background}">
            <Border x:Name="FocusedBorder" BorderThickness="0" BorderBrush="{StaticResource ButtonFocuedBorder}">
                <Grid>
                    <Border BorderThickness="1" BorderBrush="{StaticResource ButtonShadow}"/>
                    <Grid x:Name="ContentContainer" Margin="0,0,1,1">
                        <Border x:Name="BorderTopLeft" BorderThickness="3,3,0,0" BorderBrush="{StaticResource ButtonBorderLight}"/>
                        <Border Margin="3,3,0,0" BorderThickness="0,0,3,3" BorderBrush="{StaticResource ButtonBorderShadow}"/>
                        <Polygon VerticalAlignment="Top" HorizontalAlignment="Right" Width="3" Height="3" Points="0,1 1,1 1,0" Fill="{StaticResource ButtonBorderShadow}"/>
                        <Polygon VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="3" Height="3" Points="0,1 1,0 1,1" Fill="{StaticResource ButtonBorderShadow}"/>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderThickness" TargetName="FocusedBorder" Value="1"/>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderThickness" TargetName="FocusedBorder" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" TargetName="BorderTopLeft" Value="{StaticResource ButtonBorderShadow}"/>
                <Setter Property="Margin" TargetName="ContentContainer" Value="0"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="BorderBrush" TargetName="BorderTopLeft" Value="{StaticResource ButtonBorderShadow}"/>
                <Setter Property="Margin" TargetName="ContentContainer" Value="0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ThicklyBorderedDefToggleButton" TargetType="ToggleButton">
        <ControlTemplate.Resources>
            <Style TargetType="Border">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style TargetType="Polyline">
                <Setter Property="Stretch" Value="Fill"/>
                <Setter Property="StrokeStartLineCap" Value="Square"/>
                <Setter Property="StrokeEndLineCap" Value="Square"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style TargetType="Polygon">
                <Setter Property="Stretch" Value="Fill"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
        </ControlTemplate.Resources>
        <Border BorderBrush="Black" BorderThickness="1" Background="{TemplateBinding Background}">
            <Border x:Name="FocusedBorder" BorderThickness="0" BorderBrush="{StaticResource ButtonFocuedBorder}">
                <Grid>
                    <Border BorderThickness="1" BorderBrush="{StaticResource ButtonShadow}"/>
                    <Grid x:Name="ContentContainer" Margin="0,0,1,1">
                        <Border x:Name="BorderTopLeft" BorderThickness="3,3,0,0" BorderBrush="{StaticResource ButtonBorderLight}"/>
                        <Border Margin="3,3,0,0" BorderThickness="0,0,3,3" BorderBrush="{StaticResource ButtonBorderShadow}"/>
                        <Polygon VerticalAlignment="Top" HorizontalAlignment="Right" Width="3" Height="3" Points="0,1 1,1 1,0" Fill="{StaticResource ButtonBorderShadow}"/>
                        <Polygon VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="3" Height="3" Points="0,1 1,0 1,1" Fill="{StaticResource ButtonBorderShadow}"/>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderThickness" TargetName="FocusedBorder" Value="1"/>
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderThickness" TargetName="FocusedBorder" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" TargetName="BorderTopLeft" Value="{StaticResource ButtonBorderShadow}"/>
                <Setter Property="Margin" TargetName="ContentContainer" Value="0"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" TargetName="BorderTopLeft" Value="{StaticResource ButtonBorderShadow}"/>
                <Setter Property="Margin" TargetName="ContentContainer" Value="0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VeryThicklyBorderedDefButton" TargetType="Button">
        <ControlTemplate.Resources>
            <Style TargetType="Border">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style TargetType="Polyline">
                <Setter Property="Stretch" Value="Fill"/>
                <Setter Property="StrokeStartLineCap" Value="Square"/>
                <Setter Property="StrokeEndLineCap" Value="Square"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style TargetType="Polygon">
                <Setter Property="Stretch" Value="Fill"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
        </ControlTemplate.Resources>
        <Border BorderBrush="Black" BorderThickness="1" Background="{TemplateBinding Background}">
            <Border x:Name="FocusedBorder" BorderThickness="0" BorderBrush="{StaticResource ButtonFocuedBorder}">
                <Grid>
                    <Border BorderThickness="1" BorderBrush="{StaticResource ButtonShadow}"/>
                    <Grid x:Name="ContentContainer" Margin="0,0,1,1">
                        <Border x:Name="BorderTopLeft" BorderThickness="4,4,0,0" BorderBrush="{StaticResource ButtonBorderLight}"/>
                        <Border Margin="4,4,0,0" BorderThickness="0,0,4,4" BorderBrush="{StaticResource ButtonBorderShadow}"/>
                        <Polygon VerticalAlignment="Top" HorizontalAlignment="Right" Width="4" Height="4" Points="0,1 1,1 1,0" Fill="{StaticResource ButtonBorderShadow}"/>
                        <Polygon VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="4" Height="4" Points="0,1 1,0 1,1" Fill="{StaticResource ButtonBorderShadow}"/>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderThickness" TargetName="FocusedBorder" Value="1"/>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderThickness" TargetName="FocusedBorder" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" TargetName="BorderTopLeft" Value="{StaticResource ButtonBorderShadow}"/>
                <Setter Property="Margin" TargetName="ContentContainer" Value="0"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="BorderBrush" TargetName="BorderTopLeft" Value="{StaticResource ButtonBorderShadow}"/>
                <Setter Property="Margin" TargetName="ContentContainer" Value="0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VeryThicklyBorderedDefToggleButton" TargetType="ToggleButton">
        <ControlTemplate.Resources>
            <Style TargetType="Border">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style TargetType="Polyline">
                <Setter Property="Stretch" Value="Fill"/>
                <Setter Property="StrokeStartLineCap" Value="Square"/>
                <Setter Property="StrokeEndLineCap" Value="Square"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
            <Style TargetType="Polygon">
                <Setter Property="Stretch" Value="Fill"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>
        </ControlTemplate.Resources>
        <Border BorderBrush="Black" BorderThickness="1" Background="{TemplateBinding Background}">
            <Border x:Name="FocusedBorder" BorderThickness="0" BorderBrush="{StaticResource ButtonFocuedBorder}">
                <Grid>
                    <Border BorderThickness="1" BorderBrush="{StaticResource ButtonShadow}"/>
                    <Grid x:Name="ContentContainer" Margin="0,0,1,1">
                        <Border x:Name="BorderTopLeft" BorderThickness="4,4,0,0" BorderBrush="{StaticResource ButtonBorderLight}"/>
                        <Border Margin="4,4,0,0" BorderThickness="0,0,4,4" BorderBrush="{StaticResource ButtonBorderShadow}"/>
                        <Polygon VerticalAlignment="Top" HorizontalAlignment="Right" Width="4" Height="4" Points="0,1 1,1 1,0" Fill="{StaticResource ButtonBorderShadow}"/>
                        <Polygon VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="4" Height="4" Points="0,1 1,0 1,1" Fill="{StaticResource ButtonBorderShadow}"/>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        <TextBlock VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <TextBlock.Effect>
                                <BlurEffect Radius="0.0" KernelType="Box"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </Grid>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderThickness" TargetName="FocusedBorder" Value="1"/>
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderThickness" TargetName="FocusedBorder" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" TargetName="BorderTopLeft" Value="{StaticResource ButtonBorderShadow}"/>
                <Setter Property="Margin" TargetName="ContentContainer" Value="0"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" TargetName="BorderTopLeft" Value="{StaticResource ButtonBorderShadow}"/>
                <Setter Property="Margin" TargetName="ContentContainer" Value="0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>